syntax = "proto3";
package krpc.schema;
option csharp_namespace = 'KRPC.Schema.KRPC';
option java_package = 'krpc.schema';
option java_outer_classname = 'KRPC';


message ConnectionRequest {
  optional Type type = 1 [ default = RPC ];
  optional string client_name = 2;
  optional bytes client_identifier = 3;

  enum Type {
    RPC = 0;
    STREAM = 1;
  };
}

message ConnectionResponse {
  optional Status status = 1 [ default = OK ];
  enum Status {
    OK = 0;
    MALFORMED_MESSAGE = 1;
    TIMEOUT = 2;
    WRONG_TYPE = 3;
  }
  optional string message = 2;
  optional bytes client_identifier = 3;
}

message Request {
  repeated ProcedureCall calls = 1;
}

message ProcedureCall {
  optional string service = 1;
  optional string procedure = 2;
  repeated Argument arguments = 3;
}

message Argument {
  optional uint32 position = 1 [ default = 0 ];
  optional bytes value = 2;
}

message Response {
  optional string error = 1;
  repeated ProcedureResult results = 2;
}

message ProcedureResult {
  optional string error = 1;
  optional bytes value = 2;
}

message StreamUpdate {
  repeated StreamResult results = 1;
}

message StreamResult {
  optional uint64 id = 1 [ default = 0 ];
  optional ProcedureResult result = 2;
}

message Tuple {
  repeated bytes items = 1;
}

message List {
  repeated bytes items = 1;
}

message Set {
  repeated bytes items = 1;
}

message Dictionary {
  repeated DictionaryEntry entries = 1;
}

message DictionaryEntry {
  optional bytes key = 1;
  optional bytes value = 2;
}

message Stream {
  optional uint64 id = 1 [ default = 0 ];
}

message Status {
  optional string version = 1;
  optional uint64 bytes_read = 2;
  optional uint64 bytes_written = 3;
  optional float bytes_read_rate = 4;
  optional float bytes_written_rate = 5;
  optional uint64 rpcs_executed = 6;
  optional float rpc_rate = 7;
  optional bool one_rpc_per_update = 8;
  optional uint32 max_time_per_update = 9;
  optional bool adaptive_rate_control = 10;
  optional bool blocking_recv = 11;
  optional uint32 recv_timeout = 12;
  optional float time_per_rpc_update = 13;
  optional float poll_time_per_rpc_update = 14;
  optional float exec_time_per_rpc_update = 15;
  optional uint32 stream_rpcs = 16;
  optional uint64 stream_rpcs_executed = 17;
  optional float stream_rpc_rate = 18;
  optional float time_per_stream_update = 19;
}
