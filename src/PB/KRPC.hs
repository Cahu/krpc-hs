{-# LANGUAGE BangPatterns, DeriveDataTypeable, FlexibleInstances, MultiParamTypeClasses #-}
{-# OPTIONS_GHC  -fno-warn-unused-imports #-}
module PB.KRPC (protoInfo, fileDescriptorProto) where
import Prelude ((+), (/))
import qualified Prelude as Prelude'
import qualified Data.Typeable as Prelude'
import qualified Data.Data as Prelude'
import qualified Text.ProtocolBuffers.Header as P'
import Text.DescriptorProtos.FileDescriptorProto (FileDescriptorProto)
import Text.ProtocolBuffers.Reflections (ProtoInfo)
import qualified Text.ProtocolBuffers.WireMessage as P' (wireGet,getFromBS)

protoInfo :: ProtoInfo
protoInfo
 = Prelude'.read
    "ProtoInfo {protoMod = ProtoName {protobufName = FIName \".krpc.schema\", haskellPrefix = [MName \"PB\"], parentModule = [], baseName = MName \"KRPC\"}, protoFilePath = [\"PB\",\"KRPC.hs\"], protoSource = \"krpc-4.0.proto\", extensionKeys = fromList [], messages = [DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.ConnectionRequest\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ConnectionRequest\"}, descFilePath = [\"PB\",\"KRPC\",\"ConnectionRequest.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionRequest.type\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionRequest\"], baseName' = FName \"type'\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.ConnectionRequest.Type\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\",MName \"ConnectionRequest\"], baseName = MName \"Type\"}), hsRawDefault = Just \"RPC\", hsDefault = Just (HsDef'Enum \"RPC\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionRequest.client_name\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionRequest\"], baseName' = FName \"client_name\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionRequest.client_identifier\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionRequest\"], baseName' = FName \"client_identifier\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.ConnectionResponse\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ConnectionResponse\"}, descFilePath = [\"PB\",\"KRPC\",\"ConnectionResponse.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionResponse.status\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionResponse\"], baseName' = FName \"status\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 14}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.ConnectionResponse.Status\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\",MName \"ConnectionResponse\"], baseName = MName \"Status\"}), hsRawDefault = Just \"OK\", hsDefault = Just (HsDef'Enum \"OK\")},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionResponse.message\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionResponse\"], baseName' = FName \"message\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ConnectionResponse.client_identifier\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ConnectionResponse\"], baseName' = FName \"client_identifier\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Request\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Request\"}, descFilePath = [\"PB\",\"KRPC\",\"Request.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Request.calls\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Request\"], baseName' = FName \"calls\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.ProcedureCall\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ProcedureCall\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.ProcedureCall\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ProcedureCall\"}, descFilePath = [\"PB\",\"KRPC\",\"ProcedureCall.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ProcedureCall.service\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ProcedureCall\"], baseName' = FName \"service\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ProcedureCall.procedure\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ProcedureCall\"], baseName' = FName \"procedure\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ProcedureCall.arguments\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ProcedureCall\"], baseName' = FName \"arguments\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 26}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.Argument\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Argument\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Argument\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Argument\"}, descFilePath = [\"PB\",\"KRPC\",\"Argument.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Argument.position\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Argument\"], baseName' = FName \"position\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Argument.value\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Argument\"], baseName' = FName \"value\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Response\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Response\"}, descFilePath = [\"PB\",\"KRPC\",\"Response.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Response.error\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Response\"], baseName' = FName \"error\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Response.results\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Response\"], baseName' = FName \"results\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.ProcedureResult\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ProcedureResult\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.ProcedureResult\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ProcedureResult\"}, descFilePath = [\"PB\",\"KRPC\",\"ProcedureResult.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ProcedureResult.error\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ProcedureResult\"], baseName' = FName \"error\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.ProcedureResult.value\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"ProcedureResult\"], baseName' = FName \"value\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.StreamUpdate\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"StreamUpdate\"}, descFilePath = [\"PB\",\"KRPC\",\"StreamUpdate.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.StreamUpdate.results\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"StreamUpdate\"], baseName' = FName \"results\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.StreamResult\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"StreamResult\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.StreamResult\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"StreamResult\"}, descFilePath = [\"PB\",\"KRPC\",\"StreamResult.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.StreamResult.id\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"StreamResult\"], baseName' = FName \"id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.StreamResult.result\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"StreamResult\"], baseName' = FName \"result\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.ProcedureResult\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"ProcedureResult\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Tuple\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Tuple\"}, descFilePath = [\"PB\",\"KRPC\",\"Tuple.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Tuple.items\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Tuple\"], baseName' = FName \"items\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.List\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"List\"}, descFilePath = [\"PB\",\"KRPC\",\"List.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.List.items\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"List\"], baseName' = FName \"items\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Set\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Set\"}, descFilePath = [\"PB\",\"KRPC\",\"Set.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Set.items\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Set\"], baseName' = FName \"items\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Dictionary\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Dictionary\"}, descFilePath = [\"PB\",\"KRPC\",\"Dictionary.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Dictionary.entries\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Dictionary\"], baseName' = FName \"entries\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = True, mightPack = False, typeCode = FieldType {getFieldType = 11}, typeName = Just (ProtoName {protobufName = FIName \".krpc.schema.DictionaryEntry\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"DictionaryEntry\"}), hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.DictionaryEntry\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"DictionaryEntry\"}, descFilePath = [\"PB\",\"KRPC\",\"DictionaryEntry.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.DictionaryEntry.key\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"DictionaryEntry\"], baseName' = FName \"key\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.DictionaryEntry.value\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"DictionaryEntry\"], baseName' = FName \"value\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 18}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 12}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Stream\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Stream\"}, descFilePath = [\"PB\",\"KRPC\",\"Stream.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Stream.id\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Stream\"], baseName' = FName \"id\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 8}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Just \"0\", hsDefault = Just (HsDef'Integer 0)}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False},DescriptorInfo {descName = ProtoName {protobufName = FIName \".krpc.schema.Status\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\"], baseName = MName \"Status\"}, descFilePath = [\"PB\",\"KRPC\",\"Status.hs\"], isGroup = False, fields = fromList [FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.version\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"version\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 1}, wireTag = WireTag {getWireTag = 10}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 9}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.bytes_read\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"bytes_read\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 2}, wireTag = WireTag {getWireTag = 16}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.bytes_written\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"bytes_written\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 3}, wireTag = WireTag {getWireTag = 24}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.bytes_read_rate\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"bytes_read_rate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 4}, wireTag = WireTag {getWireTag = 37}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.bytes_written_rate\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"bytes_written_rate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 5}, wireTag = WireTag {getWireTag = 45}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.rpcs_executed\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"rpcs_executed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 6}, wireTag = WireTag {getWireTag = 48}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.rpc_rate\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"rpc_rate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 7}, wireTag = WireTag {getWireTag = 61}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.one_rpc_per_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"one_rpc_per_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 8}, wireTag = WireTag {getWireTag = 64}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.max_time_per_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"max_time_per_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 9}, wireTag = WireTag {getWireTag = 72}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.adaptive_rate_control\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"adaptive_rate_control\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 10}, wireTag = WireTag {getWireTag = 80}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.blocking_recv\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"blocking_recv\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 11}, wireTag = WireTag {getWireTag = 88}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 8}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.recv_timeout\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"recv_timeout\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 12}, wireTag = WireTag {getWireTag = 96}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.time_per_rpc_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"time_per_rpc_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 13}, wireTag = WireTag {getWireTag = 109}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.poll_time_per_rpc_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"poll_time_per_rpc_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 14}, wireTag = WireTag {getWireTag = 117}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.exec_time_per_rpc_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"exec_time_per_rpc_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 15}, wireTag = WireTag {getWireTag = 125}, packedTag = Nothing, wireTagLength = 1, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.stream_rpcs\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"stream_rpcs\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 16}, wireTag = WireTag {getWireTag = 128}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 13}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.stream_rpcs_executed\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"stream_rpcs_executed\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 17}, wireTag = WireTag {getWireTag = 136}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 4}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.stream_rpc_rate\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"stream_rpc_rate\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 18}, wireTag = WireTag {getWireTag = 149}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing},FieldInfo {fieldName = ProtoFName {protobufName' = FIName \".krpc.schema.Status.time_per_stream_update\", haskellPrefix' = [MName \"PB\"], parentModule' = [MName \"KRPC\",MName \"Status\"], baseName' = FName \"time_per_stream_update\", baseNamePrefix' = \"\"}, fieldNumber = FieldId {getFieldId = 19}, wireTag = WireTag {getWireTag = 157}, packedTag = Nothing, wireTagLength = 2, isPacked = False, isRequired = False, canRepeat = False, mightPack = False, typeCode = FieldType {getFieldType = 2}, typeName = Nothing, hsRawDefault = Nothing, hsDefault = Nothing}], descOneofs = fromList [], keys = fromList [], extRanges = [], knownKeys = fromList [], storeUnknown = False, lazyFields = False, makeLenses = False}], enums = [EnumInfo {enumName = ProtoName {protobufName = FIName \".krpc.schema.ConnectionRequest.Type\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\",MName \"ConnectionRequest\"], baseName = MName \"Type\"}, enumFilePath = [\"PB\",\"KRPC\",\"ConnectionRequest\",\"Type.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"RPC\"),(EnumCode {getEnumCode = 1},\"STREAM\")]},EnumInfo {enumName = ProtoName {protobufName = FIName \".krpc.schema.ConnectionResponse.Status\", haskellPrefix = [MName \"PB\"], parentModule = [MName \"KRPC\",MName \"ConnectionResponse\"], baseName = MName \"Status\"}, enumFilePath = [\"PB\",\"KRPC\",\"ConnectionResponse\",\"Status.hs\"], enumValues = [(EnumCode {getEnumCode = 0},\"OK\"),(EnumCode {getEnumCode = 1},\"MALFORMED_MESSAGE\"),(EnumCode {getEnumCode = 2},\"TIMEOUT\"),(EnumCode {getEnumCode = 3},\"WRONG_TYPE\")]}], oneofs = [], knownKeyMap = fromList []}"

fileDescriptorProto :: FileDescriptorProto
fileDescriptorProto
 = P'.getFromBS (P'.wireGet 11)
    (P'.pack
      "\208\f\n\SOkrpc-4.0.proto\DC2\vkrpc.schema\"\152\SOH\n\DC1ConnectionRequest\DC26\n\EOTtype\CAN\SOH \SOH(\SO2#.krpc.schema.ConnectionRequest.Type:\ETXRPC\DC2\DC3\n\vclient_name\CAN\STX \SOH(\t\DC2\EM\n\DC1client_identifier\CAN\ETX \SOH(\f\"\ESC\n\EOTType\DC2\a\n\ETXRPC\DLE\NUL\DC2\n\n\ACKSTREAM\DLE\SOH\"\194\SOH\n\DC2ConnectionResponse\DC2:\n\ACKstatus\CAN\SOH \SOH(\SO2&.krpc.schema.ConnectionResponse.Status:\STXOK\DC2\SI\n\amessage\CAN\STX \SOH(\t\DC2\EM\n\DC1client_identifier\CAN\ETX \SOH(\f\"D\n\ACKStatus\DC2\ACK\n\STXOK\DLE\NUL\DC2\NAK\n\DC1MALFORMED_MESSAGE\DLE\SOH\DC2\v\n\aTIMEOUT\DLE\STX\DC2\SO\n\nWRONG_TYPE\DLE\ETX\"4\n\aRequest\DC2)\n\ENQcalls\CAN\SOH \ETX(\v2\SUB.krpc.schema.ProcedureCall\"]\n\rProcedureCall\DC2\SI\n\aservice\CAN\SOH \SOH(\t\DC2\DC1\n\tprocedure\CAN\STX \SOH(\t\DC2(\n\targuments\CAN\ETX \ETX(\v2\NAK.krpc.schema.Argument\".\n\bArgument\DC2\DC3\n\bposition\CAN\SOH \SOH(\r:\SOH0\DC2\r\n\ENQvalue\CAN\STX \SOH(\f\"H\n\bResponse\DC2\r\n\ENQerror\CAN\SOH \SOH(\t\DC2-\n\aresults\CAN\STX \ETX(\v2\FS.krpc.schema.ProcedureResult\"/\n\SIProcedureResult\DC2\r\n\ENQerror\CAN\SOH \SOH(\t\DC2\r\n\ENQvalue\CAN\STX \SOH(\f\":\n\fStreamUpdate\DC2*\n\aresults\CAN\SOH \ETX(\v2\EM.krpc.schema.StreamResult\"K\n\fStreamResult\DC2\r\n\STXid\CAN\SOH \SOH(\EOT:\SOH0\DC2,\n\ACKresult\CAN\STX \SOH(\v2\FS.krpc.schema.ProcedureResult\"\SYN\n\ENQTuple\DC2\r\n\ENQitems\CAN\SOH \ETX(\f\"\NAK\n\EOTList\DC2\r\n\ENQitems\CAN\SOH \ETX(\f\"\DC4\n\ETXSet\DC2\r\n\ENQitems\CAN\SOH \ETX(\f\";\n\nDictionary\DC2-\n\aentries\CAN\SOH \ETX(\v2\FS.krpc.schema.DictionaryEntry\"-\n\SIDictionaryEntry\DC2\v\n\ETXkey\CAN\SOH \SOH(\f\DC2\r\n\ENQvalue\CAN\STX \SOH(\f\"\ETB\n\ACKStream\DC2\r\n\STXid\CAN\SOH \SOH(\EOT:\SOH0\"\244\ETX\n\ACKStatus\DC2\SI\n\aversion\CAN\SOH \SOH(\t\DC2\DC2\n\nbytes_read\CAN\STX \SOH(\EOT\DC2\NAK\n\rbytes_written\CAN\ETX \SOH(\EOT\DC2\ETB\n\SIbytes_read_rate\CAN\EOT \SOH(\STX\DC2\SUB\n\DC2bytes_written_rate\CAN\ENQ \SOH(\STX\DC2\NAK\n\rrpcs_executed\CAN\ACK \SOH(\EOT\DC2\DLE\n\brpc_rate\CAN\a \SOH(\STX\DC2\SUB\n\DC2one_rpc_per_update\CAN\b \SOH(\b\DC2\ESC\n\DC3max_time_per_update\CAN\t \SOH(\r\DC2\GS\n\NAKadaptive_rate_control\CAN\n \SOH(\b\DC2\NAK\n\rblocking_recv\CAN\v \SOH(\b\DC2\DC4\n\frecv_timeout\CAN\f \SOH(\r\DC2\ESC\n\DC3time_per_rpc_update\CAN\r \SOH(\STX\DC2 \n\CANpoll_time_per_rpc_update\CAN\SO \SOH(\STX\DC2 \n\CANexec_time_per_rpc_update\CAN\SI \SOH(\STX\DC2\DC3\n\vstream_rpcs\CAN\DLE \SOH(\r\DC2\FS\n\DC4stream_rpcs_executed\CAN\DC1 \SOH(\EOT\DC2\ETB\n\SIstream_rpc_rate\CAN\DC2 \SOH(\STX\DC2\RS\n\SYNtime_per_stream_update\CAN\DC3 \SOH(\STXB?\n\vkrpc.schemaB\EOTKRPCH\SOHP\NUL\128\SOH\NUL\136\SOH\NUL\144\SOH\NUL\160\SOH\NUL\184\SOH\NUL\216\SOH\NUL\248\SOH\NUL\170\STX\DLEKRPC.Schema.KRPCb\ACKproto3")